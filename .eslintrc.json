{
	"plugins": ["tailwindcss", "unused-imports"],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 2024,
		"sourceType": "module",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"root": true,
	"extends": [
		"next/core-web-vitals",
		"next/typescript",
		"prettier",
		"plugin:tailwindcss/recommended"
	],
	"rules": {
		"semi": ["error", "always"], // Enforce the use of semicolons at the end of statements
		"quotes": ["error", "single"], // Enforce the use of single quotes for strings
		"tailwindcss/no-custom-classname": "off", // Disable the rule that disallows custom class names in Tailwind CSS
		"unused-imports/no-unused-imports": "error", // Disallow unused imports
		"unused-imports/no-unused-vars": "error", // Disallow unused variables
		"@typescript-eslint/no-unused-vars": "error", // Disallow unused variables (TypeScript-specific)
		"@typescript-eslint/no-duplicate-enum-values": "error", // Disallow duplicate enum values in TypeScript
		"@typescript-eslint/ban-ts-comment": "error", // Disallow TypeScript directive comments (e.g., @ts-ignore)
		"@typescript-eslint/explicit-function-return-type": "error", // Require explicit return types on functions
		"@typescript-eslint/explicit-module-boundary-types": "error", // Require explicit return and argument types on exported functions and classes
		"capitalized-comments": ["warn", "always"], // Enforce capitalized comments
		"no-unused-expressions": "error", // Disallow unused expressions
		"no-unused-vars": "error", // Disallow unused variables
		"no-console": ["error", { "allow": ["warn", "error"] }], // Disallow console.log statements except for console.warn and console.error
		"eqeqeq": ["error", "always"], // Enforce the use of === and !==
		"curly": ["error", "all"], // Enforce consistent brace style for all control statements
		"no-var": "error", // Disallow the use of var and require let or const instead
		"prefer-const": "error", // Require const declarations for variables that are never reassigned after declared
		"no-debugger": "off", // Disallow the use of debugger
		"no-alert": "error", // Disallow the use of alert, confirm, and prompt
		"no-eval": "error", // Disallow the use of eval
		"no-implied-eval": "error", // Disallow the use of implied eval
		"no-iterator": "error", // Disallow the use of the __iterator__ property
		"no-proto": "error", // Disallow the use of the __proto__ property
		"no-with": "error", // Disallow the use of with statements
		"no-shadow": "error", // Disallow variable declarations from shadowing variables declared in the outer scope
		"no-use-before-define": [
			"error",
			{ "functions": false, "classes": true, "variables": true }
		] // Disallow the use of variables before they are defined
	},
	"settings": {
		"tailwindcss": {
			"callees": ["cn"],
			"config": "./tailwind.config.ts"
		},
		"next": {
			"rootDir": ["./src/"]
		}
	},
	"ignorePatterns": ["node_modules/", ".next/", "assets/", "public/", "*.sh"]
}
